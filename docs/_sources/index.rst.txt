.. Copied from gpytorch.
:github_url: https://github.com/CedricTravelletti/MESLAS

MESLAS: Multivariate Excurions Set Learning by Adaptive Sampling
=========================================================================================

The goal of the MESLAS package is to provide functionalities for simulation and
estimation of physical phenomenon using multivariate random fields.

As an example, consider the Temperature and Salinity in the ocean. These two
variables can be modelled as a bivariate Gaussian random field (GRF) with some
correlation between the outputs.
One can then draw realizations of the GRF to get plausible spatial distributions
of oceanographic properties (see Figure).

.. figure:: images/uncond_real_cropped.png
   :align: center

   Simulated realization of Temperature and Salinity field drawn from a GRF
   model.

Having a probabilistic model of the physical phenomenon of interest allows one
to extract more information than a purely deterministic model would allow. For
example, the question that triggered the development of MESLAS was the
indentification of river plumes in coastal regions (:cite:`Fossum`).

Excursion Sets
--------------
One of the main functionality of MESLAS is the estimation of excursion sets of
GRFs. Given an :math:`n`-dimensional multivariate GRF :math:`\boldsymbol{Z}`, 
an excursion set is defined as

.. math::

   \Gamma = \lbrace x \in X: t_i \leq \boldsymbol{Z}_x^{i} \leq t'_i,~i=1,...,n \rbrace

where the thresholds are allowed to be infinite.

In the context of river plume indentification, the river can be modelled as an
excursion set where the salinity and temperature are below a certain threshold.

Data Collection and Conditional Distribution
--------------------------------------------
Data is integrated to the GRF model by considering the *conditional
distribution* of the GRF, conditional on the data. Excursion sets may then be
estimated by looking at the *pointwise excursion probability*, i.e. the
probability (under the conditional distribution) that a point lies in the excursion set.

.. figure:: images/excu_proba_cropped.png
   :align: center

   Conditional pointwise excursion probability. Data collection loactions in
   green.

Implementation
--------------
MESLAS aims at providing GRF functionalities that are easy to
use, fully modular and reusable.

For example, the GRF :math:`\boldsymbol{Z}` used in Fig.1 with linear trend

.. math::
   :label: important
   :nowrap:

   \begin{align}
    \boldsymbol{\mu}(\boldsymbol{x}) &= \boldsymbol{\beta}_i + \boldsymbol{\beta}_1^t \boldsymbol{x}
   \end{align}

and factor-covariance model

.. math::
   :label: important
   :nowrap:

   \begin{align}
   Cov\left[\boldsymbol{Z}_x^i, \boldsymbol{Z}_y^j\right] &= k(x, y) \gamma(i, j)\\
   \end{align}

with Martern 3/2 spatial covariance, and *uniform mixing* covariance defined by

.. math::
   :label: important
   :nowrap:

   \begin{align}
   \gamma(i, j) &= \begin{cases} \sigma_l^2,~ i=j\\
   γ_0σ_iσ_j,~i≠ j
        \end{cases}
   \end{align}

is straightforward to define in MESLAS and to sample from

.. code-block:: python

   # Spatial Covariance.
   matern_cov = Matern32(lmbda=0.5, sigma=1.0)
   
   # Cross covariance.
   cross_cov = UniformMixing(gamma0=0.2, sigmas=[2.25, 2.25])
   covariance = FactorCovariance(matern_cov, cross_cov, n_out=n_out)
   
   # Specify mean function, here it is a linear trend that decreases with the
   # horizontal coordinate.
   beta0s = np.array([7.8, 24.0])
   beta1s = np.array([
           [0, -7.0],
           [0, -5.0]])
   mean = LinearMean(beta0s, beta1s)
   
   # Create the GRF.
   myGRF = GRF(mean, covariance)
   
   # Create an equilateral tringular grid, with 80 nodes per line.
   my_grid = TriangularGrid(80)
   
   # Sample all components (isotopic) at all locations of the grid.
   ground_truth = myGRF.sample_isotopic(my_grid.points)



More information about the special concepts and notation which are used in MESLAS 
to handle multivariate random fields may be found at :ref:`philosophy-label`.

Autonomous Adaptive Sampling
----------------------------
The main application for the MESLAS package is adaptive sampling for
(multivariate) excursion set recovery. Considering again the
temperature/salinity river plume example, one can use an autonomous underwater
vehicle (AUV) to collect temperature and salinity data in the coastal region. The
data collection process may then be guided using a (multivariate) GRF model.


.. video:: video.mp4
   :width: 900
   :height: 600
   :autoplay:
   :nocontrols:

The above video shows a simulated autonomous data collection process for the
river plume example computed
using MESLAS. The data collection locations are chosen by myopic optimization
of the integrated Bernoulli variance criterion (IBV) available in MESLAS (see :cite:`Fossum` for more details).

The left-hand plot shows the (simulated) ground truth. One is interested in
recovering the red regions. The right-hand plot shows the data collection path
travelled by the AUV, computed by myopic optimization of the IBV criterion and
the posterior excursion probability (the probability for each point to belong
to the target excursion set under the posterior law of the GRF model after data
collection). The radar shows how informative the potential next sampling
locations are, ranked according to IBV.


(For implementation, see :ref:`sensor-label`.)


.. toctree::
   :glob:
   :maxdepth: 1
   :caption: Tutorials:

   examples/full_example.py
   examples/kriging.py
   examples/sample_and_plot.py

.. toctree::
   :maxdepth: 1
   :caption: Overview

   philosophy


.. toctree::
   :glob:
   :maxdepth: 2
   :caption: Main Modules:

   grid
   random_fields
   sensor
   means
   plotting



.. bibliography:: bibliography.bib


Indices and tables
==================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`
